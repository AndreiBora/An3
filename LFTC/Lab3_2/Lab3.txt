G = (N,Sg,P,S)
N = {
	program,compound_stmt,stmt_list,stmt,decl,assign,return,iostmt,
	loop,if_stmt,type,user_type,expression,op1,
	op2,fact,input,output,condition,
	RELATION
}
Sq = {
	int,main,(,),{,},;,=,+,-,*,/,%,return,cin,cout,while,if,else,
	struct,int,float,char,IDENTIFIER,CONST
}
S = program

P = {
	program -> int main ( ) compound_stmt
	compound_stmt -> ( stmt_list )
	stmt_list -> stmt ; | stmt ; stmt_list
	stmt -> decl| assign| return| iostmt| loop| if_stmt
	decl -> type IDENTIFIER | user_type IDENTIFIER
	assign -> IDENTIFIER = expression
	expression -> expression op1 term | term
	term -> term op2 fact | fact
	fact -> IDENTIFIER | CONST | ( expression )
	op1 -> + | -
	op2 -> * | / | %
	return -> return expression
	iostmt -> input | output
	input -> cin IDENTIFIER
	output -> cout IDENTIFIER
	loop -> while ( condition ) compound_stmt
	condition -> expression RELATION expression
	if_stmt -> if ( condition ) compound_stmt | if ( condition ) compound_stmt else compound_stmt
	user_type -> struct IDENTIFIER { decl }
	RELATION-> <|<=|==|!=|>=|>
}	
